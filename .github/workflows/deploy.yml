name: Deploy to EC2

on:
  pull_request:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version

      - name: Terraform Init
        run: terraform init ./terraform

      - name: Terraform Plan
        run: terraform plan ./terraform

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: terraform/plan.txt

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event.action == 'completed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t my-python-app:latest ./app
          docker tag my-python-app:latest ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

      - name: Manual Approval
        uses: hmarr/auto-approve-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ secrets.APPROVERS }} # Set this in your repo secrets with a list of approver usernames

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest
            docker-compose -f /path/to/docker-compose.yml up -d

  apply:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event.action == 'completed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify your Terraform version

      - name: Terraform Init
        run: terraform init ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve ./terraform
        env:
          TF_VAR_some_variable: ${{ secrets.SOME_VARIABLE }}  # Add any needed Terraform variables
